; NOTE: this platformio.ini file only affects the example sketch (minimal.ino)
; Configuration for the library itself is defined in library.json and library.properties.

[ota]
; password must be at least 8 characters
esp_auth = 00000000
esp_name = wificonnector-test

[platformio]
; provide setup/loop functions for test compile:
src_dir = examples/minimal

[env]
platform = espressif32
framework = arduino
upload_speed = 921600
monitor_speed = 115200
lib_extra_dirs = ${workspacedir} ; this library, for test compile
build_flags = 
  ; -D_ESPASYNC_WIFIMGR_LOGLEVEL_=3
	-DESP_NAME=\"${ota.esp_name}\"
	-DESP_AUTH=\"${ota.esp_auth}\"
lib_deps =
  alanswx/ESPAsyncWiFiManager@^0.23
  ; https://github.com/khoih-prog/ESPAsync_WiFiManager.git
  ; me-no-dev/ESP Async WebServer@^1.2.3
  https://github.com/me-no-dev/ESPAsyncWebServer.git

;;;;; Standard ESP32 Dev Module build config:

[env:esp32-dev-module]
board = esp32dev

[env:esp32-dev-module-OTA]
extends = env:esp32-dev-module
upload_speed = 1500000
upload_flags = --auth=${ota.esp_auth}
upload_port = ${ota.esp_name}.local
upload_protocol = espota

;;;;; ESP32-pico (M5 Atom lite, M5 Atom matrix, etc.) build config:

[env:esp32-pico-module]
board = pico32
upload_speed = 115200

[env:esp32-pico-module-OTA]
extends = env:esp32-pico-module
upload_speed = 1500000
upload_flags = --auth=${ota.esp_auth}
upload_port = ${ota.esp_name}.local
upload_protocol = espota


;;;;; ESP32-WROVER build config:

; [env:esp32-wrover-module]
; board = esp-wrover-kit
; build_flags = 
; 	-DBOARD_HAS_PSRAM
; 	-DCONFIG_SPIRAM_SUPPORT
; 	-mfix-esp32-psram-cache-issue

; [env:esp32-wrover-module-OTA]
; extends = env:esp32-wrover-module
; upload_speed = 1500000
; upload_flags = --auth=${ota.esp_auth}
; upload_port = ${ota.esp_name}.local
; upload_protocol = espota
